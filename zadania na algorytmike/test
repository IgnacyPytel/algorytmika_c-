#include <iostream>
#include <string>
#include <fstream>
#include <algorithm>
#include <sstream>

using namespace std;

struct student{
    string imie;
    string nazwisko;
    int punkty;
};

void wczytajStudentow(student*&tab, int &liczbaStudentow){
    string sciezka,linia,pomoc;
    ifstream plik;
    char sredniki;
    sciezka = "studenci.csv";
    plik.open(sciezka);
    plik>>liczbaStudentow;
    for(int i = 0; i<2;i++){
        plik >> sredniki;
    }
    tab =  new student[liczbaStudentow];
    for(int i = 0;  i<liczbaStudentow; i++){
        plik>>linia;
        stringstream ss(linia);
        getline(ss,tab[i].imie, ';');
        getline(ss, tab[i].nazwisko, ';');
        getline(ss, pomoc);
        tab[i].punkty=atoi(pomoc.c_str());
    }
    plik.close();
}

void tworzene_kopca(student*&tab, int &liczbaStudentow){
    int i=1;
    while(i<liczbaStudentow){
        int j = i;
        int k = (int)(j-1)/2;
        int x = tab[i].punkty;
        while(j>0 && tab[k].punkty < x){
            tab[j].punkty = tab[k].punkty;
            j=k;
            k=(int)(j-1)/2;
        }
        tab[j].punkty=x;
    }
    i++;
}

void rozbieranie_kopca(student*&tab, int &liczbaStudentow){
    int i = liczbaStudentow - 1;
    while (i>0){
        swap(tab[0],tab[i]);
        int j = 0;
        int k = 1;
        int m;
        while (k<i){

            if(k+1<i && tab[k+1].punkty>tab[k].punkty){
                m = k+1;
            }
            else if (k+1<i && tab[k+1].punkty>tab[k].punkty){
                m=k;
            }
            if(tab[m].punkty<=tab[j].punkty){
                break;
            }
            swap(tab[j], tab[m]);
            j=m;
            k=2*j + 1;
        }
        i--;
    }
}
void wypisywanie(student*&tab, int &liczbaStudentow) {
    for (int i = 0; i < liczbaStudentow; i++) {
        std::cout << tab[i].imie << " " << tab[i].nazwisko << " " << tab[i].punkty << std::endl;
    }
}



int main(){
    student* tab;
    int liczbaStudentow;
    wczytajStudentow(tab, liczbaStudentow);
    tworzene_kopca(tab, liczbaStudentow);
    rozbieranie_kopca(tab, liczbaStudentow);
    wypisywanie(tab,liczbaStudentow);
    return 0;
}
