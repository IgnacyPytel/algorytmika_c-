#include <iostream>
#include <cstdlib>
#include <ctime>

using namespace std;

//funkcje pomocnicze


void sortowanieBabelkowe(int* tab, int n, int tryb){
    for(int i=0; i<n-1;i++){
        for(int j=0; j<n-i-1;j++){
            if(tryb==1) { //sortowanie rosnaco
                if(tab[j]>tab[j+1]){
                    int temp = tab[j];
                    tab[j] = tab[j+1];
                    tab[j+1] = temp;
                }
            }
            else{ //sortowanie malejaco
                if(tab[j]<tab[j+1]){
                    int temp = tab[j];
                    tab[j] = tab[j+1];
                    tab[j+1] = temp;
                }
            }
        }
    }
}
void wypelnij_tablice(int* tab, int n, int a, int b){
    for(int i = 0; i<n; i++){
        tab[i] = rand()%(b-a+1)+a;
    }
}

void wyswietl_tablice(int* tab, int n){
    for(int i=0;i<n;i++){
        cout<<tab[i]<<" ";
    }
    cout<<endl;
}

void przydziel_pamiec(int*& tab, int n){
    tab = new int[n];
}

void zwolnij_pamiec(int*& tab){
    delete[] tab;
    tab = nullptr;
}

void sortowaniePrzezWybor(int *tab, int n, int tryb){
    for(int i=0; i< n-1;i++){
       int indeks = i;
       for(int j=i+1;j<n;j++){
        if((tryb == 0 && tab[j] < tab[indeks]) || (tryb == 1 && tab[j] > tab[indeks])){
            indeks = j;
        }
       }
        if(indeks != i){
           swap(tab[i], tab[indeks]);
        }
    }
}
void sortowanie_przez_wstawianie(int* tab, int n, bool rosnaco){
    for(int i = 1; i<n; i++){
        int temp = tab[i];
        int j = i - 1;
        while(j>= 0 && ((rosnaco && tab[j]>temp) || (!rosnaco && tab[j]<temp))){
            tab[j+1] = tab[j];
            j--;
        }
        tab[j+1] = temp;
    }
}


void sortuj_i_wyswietl(int* tab, int n, bool rosnaco){
    sortowanie_przez_wstawianie(tab, n, rosnaco);
    cout<< "Tablica posortowana "<<(rosnaco? "rosnaco: " : "malejaco: ")<<endl;
    wyswietl_tablice(tab,n);

}
// funkcje pomocnicze dla 2d tablicy

void wyswietl(int **tab, int n, int m){
    for(int i = 0; i<n; i++){
        for(int j = 0; j<m; j++){
            cout<<tab[i][j]<<" ";
        }
        cout<<endl;
    }
}

void sortowanie_przez_wstawianie2d(int **tab, int n, int m, int kolumna, bool malejaco) {
    for (int i = 0; i < n; i++) {
        int j = i;
        while (j > 0 && ((malejaco && tab[j][kolumna] > tab[j-1][kolumna]) || (!malejaco && tab[j][kolumna] < tab[j-1][kolumna]))) {
            for (int k = 0; k < m; k++) {
                swap(tab[j][k], tab[j-1][k]);
            }
            j--;
        }
    }
}
// zadania


void zadanie2_2(){
    int n,a,b,tryb;
    int* tab = nullptr;
    cout<<"Podaj rozmiar tablicy: ";
    cin>>n;

    cout<<"Podaj przedzial <a,b> z ktorego chcesz losowac liczby: ";
    cin>>a>>b;

    cout<<"Wybierz tryb sortowanie(1-rosnaco, 0-malejaco): ";
    cin>>tryb;
    przydziel_pamiec(tab,n);
    srand(time(nullptr));
    wypelnij_tablice(tab,n,a,b);
    sortuj_i_wyswietl(tab,n,tryb);
    zwolnij_pamiec(tab);
}

void zadanie2_3(){
    srand(time(nullptr));
    int n,a,b,tryb;

    cout<<"Podaj rozmiar tablicy: ";
    cin>>n;

    cout<<"Podaj przedzial <a,b> z ktorego chcesz losowac liczby: ";
    cin>>a>>b;

    cout<<"Podaj tryb sortowanie (0-rosnaco, 1-malejaco): ";
    cin>>tryb;

    int *tab = new int[n];
    wypelnij_tablice(tab,n,a,b);

    cout<<"tablica przed sortowaniem\n";
    wyswietl_tablice(tab,n);
    sortowaniePrzezWybor(tab,n,tryb);

    cout<<"tablica po sortowaniu:\n";
    wyswietl_tablice(tab,n);
    zwolnij_pamiec(tab);
}
void zadanie2_4(){
    int rozmiar, a, b;
    bool rosnaco;

    cout << "Podaj rozmiar tablicy: ";
    cin >> rozmiar;

    cout << "Podaj przedzial <a,b>: ";
    cin >> a >> b;

    cout << "Podaj tryb sortowania (0 - malejaco, 1 - rosnaco): ";
    cin >> rosnaco;

    int* tablica = new int[rozmiar];
    wypelnij_tablice(tablica, rozmiar, a, b);

    cout << "Tablica przed sortowaniem:" << std::endl;
    wyswietl_tablice(tablica, rozmiar);

    sortuj_i_wyswietl(tablica, rozmiar, rosnaco);

    delete[] tablica;
}

void zadanie2_5() {
    srand(time(nullptr));

    int n, m, a, b, kolumna;
    bool malejaco;

    cout << "Podaj liczbe wierszy i kolumn tablicy: ";
    cin >> n >> m;

    cout << "Podaj przedzial <a,b> dla liczb losowych: ";
    cin >> a >> b;

    cout << "Podaj numer kolumny do posortowania (numeracja od 0): ";
    cin >> kolumna;

    cout << "Czy sortowac malejaco? (1-tak, 0-nie): ";
    cin >> malejaco;

    // przydzielenie pamieci
    int **tab = new int *[n];
    for (int i = 0; i < n; i++) {
        tab[i] = new int[m];
    }

    // wypelnienie tablicy losowymi liczbami
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            tab[i][j] = rand() % (b - a + 1) + a;
        }
    }

    // wyswietlenie tablicy przed sortowaniem
    cout << "Tablica przed sortowaniem:" << endl;
    wyswietl(tab, n, m);

    // sortowanie przez wstawianie
    sortowanie_przez_wstawianie2d(tab, n, m, kolumna, malejaco);

    // wyswietlenie tablicy po sortowaniu
    cout << "Tablica po sortowaniu:" << endl;
    wyswietl(tab, n, m);

    // zwolnienie pamieci w odzielnej funkcji bo mi sie juz nie chcialo
    for (int i = 0; i < n; i++) {
        delete[] tab[i];
    }
    delete[] tab;
}


int main() {

    int wybor;
    do {
        cout << "Wybierz zadanie do wykonania:" << endl;
        cout << "1) Sortowanie babelkowe" << endl;
        cout << "2) Sortowanie przez wybor" << endl;
        cout << "3) Sortowanie przez wstawianie" << endl;
        cout << "4) Sortowanie tablicy dwuwymiarowej" << endl;
        cout << "5) Wyjscie z programu" << endl;
        cin >> wybor;
        switch (wybor){
            case 1:
                zadanie2_2();
                break;
            case 2:
                zadanie2_3();
                break;
            case 3:
                zadanie2_4();
                break;
            case 4:
                zadanie2_5();
                break;
            case 5:
                cout<<"Koniec programu!\n";
                break;
            default:
                cout<<"Niepoprawny wybor! Wybierz jeszcze raz.\n";
                break;
        }
        cout<<"\n";

    } while (wybor != 5);

    return 0;
}
